apply plugin: 'AndResGuard'

buildscript {
  repositories {
    jcenter()
    google()
  }
  dependencies {
    classpath 'com.tencent.mm:AndResGuard-gradle-plugin:1.2.21'
  }
}

andResGuard {
  mappingFile = file("resource_mapping.txt")
  mappingFile = null
  // 对于发布于Google Play的APP，建议不要使用7Zip压缩，因为这个会导致Google Play的优化Patch算法失效. https://github.com/shwenzhang/AndResGuard/issues/233
  use7zip = false
  useSign = true
  // 打开这个开关，会keep住所有资源的原始路径，只混淆资源的名字
  keepRoot = false
  // 设置这个值，会把arsc name列混淆成相同的名字，减少string常量池的大小
  fixedResName = "arg"
  // 打开这个开关会合并所有哈希值相同的资源，但请不要过度依赖这个功能去除去冗余资源
  mergeDuplicatedRes = true
  whiteList = [
      // for your icon
      "R.drawable.icon",
      // for fabric
      "R.string.com.crashlytics.*",
      // for google-services
      "R.string.google_app_id",
      "R.string.gcm_defaultSenderId",
      "R.string.default_web_client_id",
      "R.string.ga_trackingId",
      "R.string.firebase_database_url",
      "R.string.google_api_key",
      "R.string.google_crash_reporting_api_key",
      // 不混淆矢量图
      "R.drawable.cc*",
      // 不混淆启动图
      "R.drawable.ic_launcher_foreground",
      "R.mipmap.ic_launcher"
  ]
  compressFilePattern = [
      "*.png",
      "*.jpg",
      "*.jpeg",
      "*.gif",
  ]
  sevenzip {
    artifact = 'com.tencent.mm:SevenZip:1.2.21'
    //path = "/usr/local/bin/7za"
  }

  /**
   * 可选： 如果不设置则会默认覆盖assemble输出的apk
   **/
   finalApkBackupPath = "${project.buildDir}/AndResGuardFinal.apk"

  /**
   * 可选: 指定v1签名时生成jar文件的摘要算法
   * 默认值为“SHA-1”
   **/
  // digestalg = "SHA-256"
}